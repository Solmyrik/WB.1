// MathX
const MathX = (function () {
  return {
    // функция, которая определяет, является ли число простым
    isPrime: function (num) {
      // числа меньше двух не могут быть простыми
      if (num < 2) return false;

      // получаем квадратный корень числа
      sqrt = Math.sqrt(num);

      // циклом делим число num на все числа от 2 до квадратного корня
      // в случае деления без остатка возвращаем false
      for (let i = 2; i <= sqrt; i++) {
        if (num % i === 0) {
          return false;
        }
      }

      // если число не делится без остататка, то оно является простым
      return true;
    },

    // вычисление N-го числа в ряду Фибоначчи
    fibonacciNtn: function (n) {
      // определяем первые числа в последовательности фибоначчи
      let a = 0;
      let b = 1;

      // в цикле обновляем значения a и b
      for (let i = 0; i < n; i++) {
        const temporary = a;
        a = a + b;
        b = temporary;
      }

      return a;
    },

    // вычисление всех чисел в ряду Фибоначчи до числа N
    fibonacci: function (n) {
      // определяем первые числа в последовательности фибоначчи
      const arr = [0, 1];

      // пушим следующие числа фибоначчи, пока не доходим до числа n
      for (let i = 2; i <= n; i++) {
        arr.push(arr[i - 1] + arr[i - 2]);
      }

      return arr;
    },

    //вычисление N-го просто числа
    primeNtn: function (n) {
      // количество простых чисел
      let count = 0;

      // первое простое число
      let num = 2;

      // цикл будет работать, пока не найдем n количество простых чисел
      while (count < n) {
        // проверяем, является ли текущее число простым
        // в случае true увеличиваем значение count
        if (isPrime(num)) {
          count++;
        }

        // проверяем количество найденных простых чисел
        // инкрементируем num
        if (count < n) {
          num++;
        }
      }

      return num;
    },

    //вычисление всех простых чисел до числа N
    primeAll: function (n) {
      // массив, куда мы будем помещать все простые числа
      const result = [];

      // находим все простые числа до числа n
      // и пушим их в результирующий массив
      for (let i = 2; i <= n; i++) {
        if (isPrime(n)) {
          result.push;
        }
      }

      return result;
    },
  };
})();
